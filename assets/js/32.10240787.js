(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{429:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("Boxx"),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#软件安装及测试"}},[s._v("软件安装及测试")]),a("ul",[a("li",[a("a",{attrs:{href:"#安装方法"}},[s._v("安装方法")])]),a("li",[a("a",{attrs:{href:"#小测试数据下载"}},[s._v("小测试数据下载")])]),a("li",[a("a",{attrs:{href:"#测试数据运行"}},[s._v("测试数据运行")])])])]),a("li",[a("a",{attrs:{href:"#软件参数"}},[s._v("软件参数")])])])]),a("p"),s._v(" "),a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("p",[s._v("Peregrine 是一款针对准确度高的长读长（length >10kb,accuracy>99%）的基因组组装工具。仅20cpu核时可以从30x的reads中得到纠错后的一致性序列。大多数的长读长软件利用的是Overlap-layout-consensus（OLC）方法，需要all-to-all的读长比较。Peregrine组装使用的是SHIMMER (Sparse HIerarchical MiniMimER)方法来避免这种耗时比较。")]),s._v(" "),a("p",[s._v("可以在单个节点上使用云可访问的硬件在大约两个小时内完成人类基因组组装。同样，具有足够物理内存的专用台式计算机（例如2019 Mac Pro）也可以执行此任务，从而避免了软件基础结构要求和集群计算专业技能的需要。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("仓库地址: https://github.com/cschin/Peregrine "),a("br"),s._v("\n文章地址: https://www.biorxiv.org/content/10.1101/705616v1.full")])]),s._v(" "),a("h2",{attrs:{id:"软件安装及测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件安装及测试"}},[s._v("#")]),s._v(" 软件安装及测试")]),s._v(" "),a("h3",{attrs:{id:"安装方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装方法"}},[s._v("#")]),s._v(" 安装方法")]),s._v(" "),a("p",[s._v("通过conda安装")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /opt/conda/bin/activate\nconda create -n peregrine -y "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("python")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.7")]),s._v("\n\nconda activate peregrine\nconda "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -c conda-forge -y pypy3.6\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushd")]),s._v(" py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf .eggs/ dist/ build/ peregrine.egg-info/ peregrine_pypy.egg-info get-pip.py\npython3 setup.py "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\npython3 setup.py clean --all\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("popd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b peregrine https://github.com/cschin/pypeFLOW.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushd")]),s._v(" pypeFLOW\npython3 setup.py "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("popd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushd")]),s._v(" py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -q https://bootstrap.pypa.io/get-pip.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -q https://bootstrap.pypa.io/get-pip.py\npypy3 get-pip.py\npypy3 setup_pypy.py "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("popd")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushd")]),s._v(" src\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" all\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("popd")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("直接拉取 docker镜像（推荐）")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker pull cschin/peregrine:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"小测试数据下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小测试数据下载"}},[s._v("#")]),s._v(" 小测试数据下载")]),s._v(" "),a("p",[s._v("作者自己用的ecoli测试数据放在了亚马逊云上，国内访问不方便；也可以自己下个基因组，使用作者仓库的simulate_reads.py模拟些数据。这个地方使用hifiasm的测试数据做个测试。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/chhylp123/hifiasm/releases/download/v0.7/chr11-2M.fa.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"测试数据运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试数据运行"}},[s._v("#")]),s._v(" 测试数据运行")]),s._v(" "),a("p",[s._v("数据下载完成后，把数据的绝对路径写到一个read.lst文件里，支持fasta/fastq(.gz).")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("/chr11-2M.fa.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("reads.lst\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用镜像方式运行")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run -it -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v(" --user "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" cschin/peregrine:latest asm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("/reads.lst "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --with-consensus --shimmer-r "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" --best_n_ovlp "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --output "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("/test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("会弹出个选项告诉仅限非商用用途，输入yes")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("This is a pre-release, please do not re-distribute without permission. "),a("br")]),s._v(" "),a("p",[s._v("I agree that I am not using this software for any commericial purposes (yes/no): no "),a("br"),s._v("\nSorry, please contact us to get a license before using Peregrine. Thanks")])]),s._v(" "),a("p",[s._v("大概5秒就得到结果，结果位于“4-cns/cns-merge/ctg_cns.fa”")]),s._v(" "),a("h2",{attrs:{id:"软件参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件参数"}},[s._v("#")]),s._v(" 软件参数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Usage:\n  pg_run.py asm <reads.lst> <index_nchunk> <index_nproc>\n                            <ovlp_nchunk> <ovlp_nproc>\n                            <mapping_nchunk> <mapping_nproc>\n                            <cns_nchunk> <cns_nproc>\n                            <sort_nproc>\n                            [--with-consensus]\n                            [--with-L0-index]\n                            [--output <output>]\n                            [--shimmer-k <shimmer_k>]\n                            [--shimmer-w <shimmer_w>]\n                            [--shimmer-r <shimmer_r>]\n                            [--shimmer-l <shimmer_l>]\n                            [--best_n_ovlp <n_ovlp>]\n                            [--mc_lower <mc_lower>]\n                            [--mc_upper <mc_upper>]\n                            [--aln_bw <aln_bw>]\n                            [--ovlp_upper <ovlp_upper>]\n  pg_run.py (-h | --help)\n  pg_run.py --verison\n\nOptions:\n  -h --help                   Show this help\n  --version                   Show version\n  --with-consensus            Generate consensus after getting the draft contigs\n  --with-L0-index             Keep level-0 index\n  --output <output>           Set output directory (will be created if not exist) [default: ./wd]\n  --shimmer-k <shimmer_k>     Level 0 k-mer size [default: 16]\n  --shimmer-w <shimmer_w>     Level 0 window size [default: 80]\n  --shimmer-r <shimmer_r>     Reduction factore for high level SHIMMER [default: 6]\n  --shimmer-l <shimmer_l>     number of level of shimmer used, the value should be 1 or 2 [default: 2]\n  --best_n_ovlp <n_ovlp>      Find best n_ovlp overlap [default: 4]\n  --mc_lower <mc_lower>       Does not cosider SHIMMER with count less than mc_low [default: 2]\n  --mc_upper <mc_upper>       Does not cosider SHIMMER with count greater than mc_upper [default: 240]\n  --aln_bw <aln_bw>           Max off-diagonal gap allow during overlap confirmation [default: 100]\n  --ovlp_upper <ovlp_upper>   Ignore cluster with overlap count greater ovlp_upper [default: 120]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("nchunk 为分块数，nproc 为cpu数；对于小内存机器来说，可以使用一个较大的ovlp_nchunk和较小的ovlp_nproc，例如一个32G的机器可以设置ovlp_nchunk=24 和 ovlp_nproc=1.")])])],1)}),[],!1,null,null,null);n.default=e.exports}}]);