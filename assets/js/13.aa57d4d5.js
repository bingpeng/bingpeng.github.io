(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{326:function(t,e,r){"use strict";r.r(e);var o=r(327),a=r.n(o);for(var n in o)"default"!==n&&function(t){r.d(e,t,(function(){return o[t]}))}(n);e.default=a.a},327:function(t,e){},328:function(t,e,r){},382:function(t,e,r){"use strict";var o=r(328);r.n(o).a},404:function(t,e,r){"use strict";r.d(e,"a",(function(){return o})),r.d(e,"b",(function(){return a}));var o=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"记得最早学生信最难的不是编程，而是软件安装，一天安装不了一个软件，陷入无限的系统重装和各类包版本的尝试中。接触到conda之后这个问题有所缓解，但不同环境的整理和切换也很麻烦，特别是在hpc的环境下（使用module类工具管理软件也许是个可行的办法）。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#记得最早学生信最难的不是编程，而是软件安装，一天安装不了一个软件，陷入无限的系统重装和各类包版本的尝试中。接触到conda之后这个问题有所缓解，但不同环境的整理和切换也很麻烦，特别是在hpc的环境下（使用module类工具管理软件也许是个可行的办法）。"}},[t._v("#")]),t._v(" 记得最早学生信最难的不是编程，而是软件安装，一天安装不了一个软件，陷入无限的系统重装和各类包版本的尝试中。接触到conda之后这个问题有所缓解，但不同环境的整理和切换也很麻烦，特别是在HPC的环境下（使用module类工具管理软件也许是个可行的办法）。")]),t._v(" "),r("h2",{attrs:{id:"按照现在it发展趋势，推崇搞devops和基于容器编排技术的k8s。我感觉生信后续也要走这个路子，使用docker进行环境管理，docker镜像通过dockerfile构建，分析代码和dockerfile通过git进行版本控制，使用ci进行自动化构建和测试。通过git可以同时将软件环境版本和分析代码版本管理起来，做到流程真正可复现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按照现在it发展趋势，推崇搞devops和基于容器编排技术的k8s。我感觉生信后续也要走这个路子，使用docker进行环境管理，docker镜像通过dockerfile构建，分析代码和dockerfile通过git进行版本控制，使用ci进行自动化构建和测试。通过git可以同时将软件环境版本和分析代码版本管理起来，做到流程真正可复现"}},[t._v("#")]),t._v(" 按照现在IT发展趋势，推崇搞DevOps和基于容器编排技术的k8s。我感觉生信后续也要走这个路子，使用Docker进行环境管理，docker镜像通过Dockerfile构建，分析代码和Dockerfile通过git进行版本控制，使用CI进行自动化构建和测试。通过git可以同时将软件环境版本和分析代码版本管理起来，做到流程真正可复现")]),t._v(" "),r("h2",{attrs:{id:"之前生信靠perl、python或者shell串联的流程，难以快速部署到hpc，并且维护麻烦；nextflow这类工具的出现极大简化了生信流程的构建，并且兼容容器技术和各类调度技术，我看好nf作为新的生信流程串联框架的发展。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#之前生信靠perl、python或者shell串联的流程，难以快速部署到hpc，并且维护麻烦；nextflow这类工具的出现极大简化了生信流程的构建，并且兼容容器技术和各类调度技术，我看好nf作为新的生信流程串联框架的发展。"}},[t._v("#")]),t._v(" 之前生信靠perl、python或者shell串联的流程，难以快速部署到HPC，并且维护麻烦；Nextflow这类工具的出现极大简化了生信流程的构建，并且兼容容器技术和各类调度技术，我看好NF作为新的生信流程串联框架的发展。")]),t._v(" "),r("h2",{attrs:{id:"做一些生信相关又不全是生信技术的笔记，方便自己以后查阅。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#做一些生信相关又不全是生信技术的笔记，方便自己以后查阅。"}},[t._v("#")]),t._v(" 做一些生信相关又不全是生信技术的笔记，方便自己以后查阅。")]),t._v(" "),r("div",{attrs:{id:"category"}},[r("p",[r("RouterLink",{attrs:{to:"/categories/集群调度工具/"}},[t._v("【集群调度】")])],1)]),t._v(" "),r("div",{attrs:{id:"category"}},[r("p",[r("RouterLink",{attrs:{to:"/categories/容器技术/"}},[t._v("【容器技术】")])],1)]),t._v(" "),r("div",{attrs:{id:"category"}},[r("p",[r("RouterLink",{attrs:{to:"/categories/nextflow/"}},[t._v("【NextFlow】")])],1)]),t._v(" "),r("div",{attrs:{id:"tag"}},[r("p",[r("RouterLink",{attrs:{to:"/tag/"}},[t._v("【标签】")])],1)])])},a=[]},406:function(t,e,r){"use strict";r.r(e);var o=r(404),a=r(326);for(var n in a)"default"!==n&&function(t){r.d(e,t,(function(){return a[t]}))}(n);r(382);var i=r(2),s=Object(i.a)(a.default,o.a,o.b,!1,null,"7fd69359",null);e.default=s.exports}}]);