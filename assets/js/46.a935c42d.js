(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{445:function(s,e,a){"use strict";a.r(e);var t=a(2),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("Boxx"),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#基本查询"}},[s._v("基本查询")])]),a("li",[a("a",{attrs:{href:"#条件查询"}},[s._v("条件查询")])]),a("li",[a("a",{attrs:{href:"#投影查询"}},[s._v("投影查询")])]),a("li",[a("a",{attrs:{href:"#排序"}},[s._v("排序")])]),a("li",[a("a",{attrs:{href:"#分页查询"}},[s._v("分页查询")])]),a("li",[a("a",{attrs:{href:"#聚合查询"}},[s._v("聚合查询")]),a("ul",[a("li",[a("a",{attrs:{href:"#分组"}},[s._v("分组")])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"基本查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本查询"}},[s._v("#")]),s._v(" 基本查询")]),s._v(" "),a("p",[s._v("*表示“所有列”，FROM表示将要从哪个表查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT * FROM <表名>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不带FROM子句的SELECT语句有一个有用的用途，就是用来判断当前到数据库的连接是否有效。许多检测工具会执行一条SELECT 1;来测试数据库连接。")]),s._v(" "),a("h2",{attrs:{id:"条件查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[s._v("#")]),s._v(" 条件查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT * FROM <表名> WHERE <条件>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("SELECT语句可以通过WHERE条件来设定查询条件，查询结果是满足查询条件的记录。")]),s._v(" "),a("p",[s._v("例如，要指定条件“分数在80分或以上的学生”，写成WHERE条件就是SELECT * FROM students WHERE score >= 80。")]),s._v(" "),a("p",[s._v("其中，"),a("strong",[s._v("WHERE")]),s._v("关键字后面的score >= 80就是条件，"),a("strong",[s._v("score")]),s._v("是列名")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT * FROM students WHERE score >= 80;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"投影查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#投影查询"}},[s._v("#")]),s._v(" 投影查询")]),s._v(" "),a("p",[s._v("使用SELECT * FROM <表名> WHERE <条件>可以选出表中的若干条记录。我们注意到返回的二维表结构和原表是相同的，即结果集的所有列与原表的所有列都一一对应。")]),s._v(" "),a("p",[s._v("如果我们只希望返回某些列的数据，而不是所有列的数据，我们可以用SELECT 列1, 列2, 列3 FROM ...，让结果集仅包含指定列。这种操作称为投影查询。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, score, name FROM students;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("还可以给每一列起个别名，这样，结果集的列名就可以与原表的列名不同。它的语法是"),a("strong",[s._v("SELECT 列1 别名1, 列2 别名2, 列3 别名3 FROM ...")])]),s._v(" "),a("p",[s._v("以下SELECT语句将列名score重命名为points，而id和name列名保持不变:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, score points, name FROM students;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[s._v("#")]),s._v(" 排序")]),s._v(" "),a("p",[s._v("使用SELECT查询时，查询结果集通常是按照id排序的，也就是根据主键排序")]),s._v(" "),a("p",[s._v("如果我们要根据其他条件排序怎么办？可以加上ORDER BY子句。例如按照成绩从低到高进行排序：\n按score从低到高")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score FROM students ORDER BY score;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果要反过来，按照成绩从高到底排序，我们可以加上DESC表示“倒序”：\n按score从高到低")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score FROM students ORDER BY score DESC;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果score列有相同的数据，要进一步排序，可以继续添加列名。例如，使用ORDER BY score DESC, gender表示先按score列倒序，如果有相同分数的，再按gender列排序：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score FROM students ORDER BY score DESC, gender;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("默认的排序规则是ASC：“升序”，即从小到大。ASC可以省略，即ORDER BY score ASC和ORDER BY score效果一样。")]),s._v(" "),a("p",[s._v("如果有WHERE子句，那么ORDER BY子句要放到WHERE子句后面。例如，查询一班的学生成绩，并按照倒序排序：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score\nFROM students\nWHERE class_id = 1\nORDER BY score DESC;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"分页查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[s._v("#")]),s._v(" 分页查询")]),s._v(" "),a("p",[s._v("使用SELECT查询时，如果结果集数据量很大，比如几万行数据，放在一个页面显示的话数据量太大，不如分页显示，每次显示 N 条。")]),s._v(" "),a("p",[s._v("我们把结果集分页，每页3条记录。要获取第1页的记录，可以使用"),a("strong",[s._v("LIMIT 3 OFFSET 0")]),s._v("\n查询第1页")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score\nFROM students\nORDER BY score DESC\nLIMIT 3 OFFSET 0;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上述查询LIMIT 3 OFFSET 0表示，对结果集从0号记录开始，最多取3条。")]),s._v(" "),a("p",[s._v(":::\n注意SQL记录集的索引从0开始。\n:::")]),s._v(" "),a("p",[s._v("如果要查询第2页，那么我们只需要“跳过”头3条记录，也就是对结果集从3号记录开始查询，把OFFSET设定为3：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score\nFROM students\nORDER BY score DESC\nLIMIT 3 OFFSET 3;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("查询第4页的时候，OFFSET应该设定为9:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT id, name, gender, score\nFROM students\nORDER BY score DESC\nLIMIT 3 OFFSET 9;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("注意")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("OFFSET是可选的，如果只写"),a("code",[s._v("LIMIT 15")]),s._v("，那么相当于"),a("code",[s._v("LIMIT 15 OFFSET 0")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("在MySQL中，"),a("code",[s._v("LIMIT 15 OFFSET 30")]),s._v("还可以简写成"),a("code",[s._v("LIMIT 30, 15")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("使用"),a("code",[s._v("LIMIT <M> OFFSET <N>")]),s._v("分页时，随着N越来越大，查询效率也会越来越低。")])])]),s._v(" "),a("h2",{attrs:{id:"聚合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询"}},[s._v("#")]),s._v(" 聚合查询")]),s._v(" "),a("p",[s._v("对于统计总数、平均数这类计算，SQL提供了专门的聚合函数，使用聚合函数进行查询，就是聚合查询，它可以快速获得结果。")]),s._v(" "),a("p",[s._v("以查询students表一共有多少条记录为例，我们可以使用SQL内置的COUNT()函数查询：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT COUNT(*) FROM students;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("COUNT( * )表示查询所有列的行数，要注意聚合的计算结果虽然是一个数字，但查询的结果仍然是一个二维表，只是这个二维表只有一行一列，并且列名是COUNT( * )。")]),s._v(" "),a("p",[s._v("除count外，SQL还提供了如下聚合函数：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("函数")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("SUM")]),s._v(" "),a("td",[s._v("计算某一列的合计值，该列必须为数值类型")])]),s._v(" "),a("tr",[a("td",[s._v("AVG")]),s._v(" "),a("td",[s._v("计算某一列的平均值，该列必须为数值类型")])]),s._v(" "),a("tr",[a("td",[s._v("MAX")]),s._v(" "),a("td",[s._v("计算某一列的最大值")])]),s._v(" "),a("tr",[a("td",[s._v("MIN")]),s._v(" "),a("td",[s._v("计算某一列的最小值")])])])]),s._v(" "),a("p",[s._v("使用聚合查询计算男生平均成绩:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT AVG(score) average FROM students WHERE gender = 'M';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("结果")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("average")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("81.4")])])])]),s._v(" "),a("p",[s._v(":::\n如果聚合查询的WHERE条件没有匹配到任何行，COUNT()会返回0，而SUM()、AVG()、MAX()和MIN()会返回NULL\n:::")]),s._v(" "),a("h3",{attrs:{id:"分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[s._v("#")]),s._v(" 分组")]),s._v(" "),a("p",[s._v("如果我们要统计一班的学生数量，我们知道，可以用"),a("code",[s._v("SELECT COUNT(*) num FROM students WHERE class_id = 1;")]),s._v("。\n如果要继续统计二班、三班的学生数量，难道必须不断修改WHERE条件来执行SELECT语句吗？")]),s._v(" "),a("p",[s._v("可以通过"),a("strong",[s._v("GROUP BY")]),s._v("实现分组聚合：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT COUNT(*) num FROM students GROUP BY class_id;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("结果：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("num")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("4")])]),s._v(" "),a("tr",[a("td",[s._v("3")])]),s._v(" "),a("tr",[a("td",[s._v("3")])])])]),s._v(" "),a("p",[s._v("可以把class_id列也放入结果集中")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT class_id, COUNT(*) num FROM students GROUP BY class_id;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("结果：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("class_id")]),s._v(" "),a("th",[s._v("num")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("4")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("3")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("3")])])])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);